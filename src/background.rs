//! # D-Bus interface proxy for: `org.freedesktop.impl.portal.Background`
//!
//! This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
//! Source: `Interface '/org/freedesktop/portal/desktop' from service 'org.freedesktop.impl.portal.desktop.kde' on system bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//! This type implements the [D-Bus standard interfaces], (`org.freedesktop.DBus.*`) for which the
//! following zbus API can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! Consequently `zbus-xmlgen` did not generate code for the above interfaces.
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "org.freedesktop.impl.portal.Background",
    default_service = "org.freedesktop.impl.portal.desktop.kde",
    default_path = "/org/freedesktop/portal/desktop"
)]
pub trait Background {
    /// EnableAutostart method
    fn enable_autostart(
        &self,
        app_id: &str,
        enable: bool,
        commandline: &[&str],
        flags: u32,
    ) -> zbus::Result<bool>;

    /// GetAppState method
    fn get_app_state(
        &self,
    ) -> zbus::Result<std::collections::HashMap<String, zbus::zvariant::OwnedValue>>;

    /// NotifyBackground method
    fn notify_background(
        &self,
        handle: &zbus::zvariant::ObjectPath<'_>,
        app_id: &str,
        name: &str,
    ) -> zbus::Result<(
        u32,
        std::collections::HashMap<String, zbus::zvariant::OwnedValue>,
    )>;

    /// RunningApplicationsChanged signal
    #[zbus(signal)]
    fn running_applications_changed(&self) -> zbus::Result<()>;
}
